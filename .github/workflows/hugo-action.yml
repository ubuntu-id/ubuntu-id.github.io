# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Check out latest commit 
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        name: Checkout src repo
        with:
          path: src
          ref: main
      
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.18.1' # The Go version to download (if necessary) and use.
      - name: Install hugo
        working-directory: src
        run: |
          wget https://github.com/gohugoio/hugo/releases/download/v0.99.1/hugo_extended_0.99.1_Linux-64bit.deb -O hugo.deb
          DEBIAN_FRONTEND=noninteractive sudo dpkg -i hugo.deb
          wget https://github.com/sass/dart-sass-embedded/releases/download/1.52.1/sass_embedded-1.52.1-linux-x64.tar.gz -O dartsass.tar.gz
          tar -xvzf dartsass.tar.gz
          sudo cp sass_embedded/dart-sass-embedded /usr/bin/
      - name: Build website with hugo
        working-directory: src
        run: |
          hugo mod get
          cd themes/ubuntukr && npm i && cd ../../
          hugo
      # Checkout destination branch
      - uses: actions/checkout@v2
        name: Checkout dest repo
        with:
          path: dest
          fetch-depth: 0
          ref: gh-pages

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
